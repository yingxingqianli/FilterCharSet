
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Map;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;


/*
 * 乱码解决拦截器
 */
public class FilterCharSet implements Filter{
	//boolean flag = false;

	public void init(FilterConfig filterConfig) throws ServletException {
		
	}

	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain chain) throws IOException, ServletException {
		HttpServletRequest request2= (HttpServletRequest) request;
		/*
		 * 从页面中获取参数的方法
		 * request2.getParameterMap();//如一大堆用户录入的信息
		 * request2.getParameter(userName);//获取单个信息
		 * request2.getParameterValues(name);//如个人的爱好
		 */
		//在此链接放行之前，重写HttpServletRequestWrapper里的这三个方法来设置编码。
		chain.doFilter(new RequestDemo(request2), response);
	}
	//HttpServletRequestWrapper使用的是包装类设计模式 用于解决接口里声明的方法全实现的问题
	class RequestDemo extends HttpServletRequestWrapper{
		boolean flag = false;
		HttpServletRequest request;

		public RequestDemo(HttpServletRequest request) {
			super(request);
			this.request = request;
			
		}

		@Override
		public String getParameter(String name) {
			//处理空请求
			if(getParameterValues(name) == null){
				return null;
			}
			return getParameterValues(name)[0];
		}

		@Override
		public String[] getParameterValues(String name) {
			//处理空请求
			if(getParameterMap().get(name) == null){
				return null;
			}
			return getParameterMap().get(name);
			
		}
		@SuppressWarnings("unchecked")
		@Override
		public Map<String,String[]> getParameterMap() {
			
			try {
				//对于post请求方式的处理
				if(request.getMethod().equalsIgnoreCase("post")){
					
						request.setCharacterEncoding("UTF-8");
						return request.getParameterMap();
				//对于get请求的处理
				}else if(request.getMethod().equalsIgnoreCase("get")){
					//处理表单提交的信息
					Map<String,String[]> map = request.getParameterMap();
					if(!flag){
						
						for(String key: map.keySet()){
							String[] strings = map.get(key);
							for(int i = 0 ; i < strings.length;i++ ){
								String s = strings[i];
								//此处处理乱码问题。
								strings[i] = new String(s.getBytes("ISO-8859-1"),"UTF-8");

							}
							//此处没有将values再次放入map中的理由是getParameterMap()获得的
							//参数值作为映射值的不可变 Map，且此时只改变了一下编码，因而不用再放入
							//map.put(key,strings);
							
						}
						flag=true;
					
					}
					return map;

				}
			} catch (UnsupportedEncodingException e) {
							e.printStackTrace();
			}
			return super.getParameterMap();
		}

		
		
	}

	public void destroy() {
		
	}


	

}
